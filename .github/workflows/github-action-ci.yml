name: CI(Build and push to docker hub)

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn package install -Dmaven.test.skip=true
      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - run: npm install
      - run: npm run build
      - name: Login docker hub
        env:
          DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        # 指定login命令登录hub.docker.com，帐号和密码已经在GitHub网页中配置好了
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin
      - name: Set up Docker Buildx
        # 使用buildx来构建镜像，这个工具功能很丰富
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          buildx-version: latest
      # 构建镜像，用buildx可以同时构建X86和ARM架构的镜像，然后推送到hub.docker.com
      - name: Build dockerfile (with push) - 网关管理服务前端
        run: |
          cd gateway/gateway-admin-ui && \
          docker buildx build \
          --platform=linux/amd64,linux/arm/v7,linux/arm64 \
          --output "type=image,push=true" \
          --file ./Dockerfile . \
          --tag dlhf/gateway-admin-ui:latest
      - name: Build dockerfile (with push) - 网关管理服务后端
        run: |
          cd gateway/gateway-admin-server && \
          docker buildx build \
          --platform=linux/amd64,linux/arm/v7,linux/arm64 \
          --output "type=image,push=true" \
          --file ./Dockerfile . \
          --tag dlhf/gateway-admin-server:latest
      - name: Build dockerfile (with push) - 网关核心服务后端
        run: |
          cd gateway/gateway-server && \
          docker buildx build \
          --platform=linux/amd64,linux/arm/v7,linux/arm64 \
          --output "type=image,push=true" \
          --file ./Dockerfile . \
          --tag dlhf/gateway-server:latest